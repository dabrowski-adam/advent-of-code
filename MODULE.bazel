module(
    name = "advent_of_code",
    version = "0.0.0",
)

bazel_dep(
    name = "hermetic_cc_toolchain",
    version = "4.0.1",
)

toolchains = use_extension("@hermetic_cc_toolchain//toolchain:ext.bzl", "toolchains")
use_repo(toolchains, "zig_sdk")

register_toolchains(
    "@zig_sdk//toolchain:linux_amd64_gnu.2.28",
    "@zig_sdk//toolchain:linux_arm64_gnu.2.28",
    "@zig_sdk//toolchain:darwin_amd64",
    "@zig_sdk//toolchain:windows_amd64",
    "@zig_sdk//toolchain:windows_arm64",
)

bazel_dep(name = "rules_jvm_external", version = "6.8")
bazel_dep(name = "toolchains_llvm", version = "1.4.0")

# https://github.com/uber/hermetic_cc_toolchain/issues/10
llvm = use_extension("@toolchains_llvm//toolchain/extensions:llvm.bzl", "llvm")
llvm.toolchain(
    llvm_versions = {
        "darwin-aarch64": "15.0.0",
    },
)
use_repo(llvm, "llvm_toolchain")

# https://github.com/bazelbuild/bazel/issues/25124
bazel_dep(name = "zlib", version = "1.3.1.bcr.5")
bazel_dep(name = "rules_java", version = "8.15.1")

bazel_dep(name = "rules_jvm_external", version = "6.8")

bazel_dep(name = "rules_scala", version = "7.1.1")

scala_config = use_extension(
    "@rules_scala//scala/extensions:config.bzl",
    "scala_config",
)
scala_config.settings(
    scala_version = "3.6.4",
)

scala_deps = use_extension(
    "@rules_scala//scala/extensions:deps.bzl",
    "scala_deps",
)
scala_deps.scala()
scala_deps.scalafmt()
scala_deps.scalatest()

# To update maven.lock, run this command to re-pin the unpinned repository:
# REPIN=1 bazel run @maven//:pin
maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.install(
    artifacts = [
        "org.typelevel:cats-effect_3:3.5.7",
        "org.scalatest:scalatest_3:3.2.18",
        "com.disneystreaming:weaver-cats_3:0.8.3",
        "com.disneystreaming:weaver-framework_3:0.8.3",
        "com.disneystreaming:weaver-core_3:0.8.3",
        "com.disneystreaming:weaver-discipline_3:0.8.3",
        "com.disneystreaming:weaver-scalacheck_3:0.8.3",
    ],
    fail_if_repin_required = True,
    fetch_sources = True,
    lock_file = "//:maven.lock",
)
use_repo(maven, "maven")
